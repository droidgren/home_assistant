blueprint:
  name: Shelly Dimmer 2 Virtual Light Controller 3
  description: >
    Control another light using a Shelly Dimmer 2.  
    - Single click → toggle  
    - Double click → full brightness  
    - Hold → continuous dim (via script blueprint)  
    - Release → stop + reverse direction  
  domain: automation
  author: HomeAssistant Helper GPT-5

  input:
    shelly_device:
      name: Shelly Device
      selector:
        device:
          integration: shelly

    target_light:
      name: Target Light
      selector:
        entity:
          domain: light

    dimming_script:
      name: Continuous Dimming Script
      description: Select the script created from the "Continuous Dimming Loop" blueprint
      selector:
        entity:
          domain: script

    brightness_step:
      name: Brightness Step (%)
      default: 4
      selector:
        number:
          min: 1
          max: 20
          unit_of_measurement: "%"

    delay_ms:
      name: Delay Between Steps (ms)
      default: 120
      selector:
        number:
          min: 50
          max: 1000
          unit_of_measurement: "ms"

mode: restart

variables:
  light_entity: !input target_light
  shelly_device_id: !input shelly_device
  dim_script: !input dimming_script
  step: !input brightness_step
  delay: !input delay_ms
  direction: "{{ this.attributes.get('direction', 1) | int }}"  # 1 = up, -1 = down

trigger:
  - platform: event
    event_type: shelly.click
    id: single
    event_data:
      click_type: single
  - platform: event
    event_type: shelly.click
    id: double
    event_data:
      click_type: double
  - platform: event
    event_type: shelly.click
    id: long
    event_data:
      click_type: long
  - platform: event
    event_type: shelly.click
    id: long_release
    event_data:
      click_type: long_release

condition:
  - condition: template
    value_template: "{{ trigger.event.data.device_id == shelly_device_id }}"

action:
  - choose:
      # ───── SINGLE CLICK ─────
      - conditions:
          - condition: trigger
            id: single
        sequence:
          - service: light.toggle
            target:
              entity_id: "{{ light_entity }}"

      # ───── DOUBLE CLICK ─────
      - conditions:
          - condition: trigger
            id: double
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_entity }}"
            data:
              brightness_pct: 100

      # ───── LONG PRESS: start dimming via script ─────
      - conditions:
          - condition: trigger
            id: long
        sequence:
          - service: script.turn_on
            target:
              entity_id: "{{ dim_script }}"
            data:
              variables:
                light_entity: "{{ light_entity }}"
                step: "{{ step }}"
                delay: "{{ delay }}"
                direction: "{{ direction }}"

      # ───── RELEASE: stop + flip direction ─────
      - conditions:
          - condition: trigger
            id: long_release
        sequence:
          - service: script.turn_off
            target:
              entity_id: "{{ dim_script }}"
          - variables:
              new_direction: "{{ direction * -1 }}"
          - service: homeassistant.update_entity
            target: 
              entity_id: "{{ this.entity_id }}"
          - service: logbook.log
            data:
              name: "Shelly Dimmer"
              message: "Next dim direction: {{ 'up' if new_direction == 1 else 'down' }}"
