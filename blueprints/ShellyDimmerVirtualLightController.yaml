blueprint:
  name: Shelly Dimmer Virtual Light Controller v1.1
  description: >
    Use a Shelly Dimmer 2 as a virtual dimmer to control another smart light.
    Single click toggles, double click sets full brightness,
    long press brightens, and long release dims.

  domain: automation
  input:
    shelly_device:
      name: Shelly Device
      description: Select the Shelly Dimmer device to listen for input events
      selector:
        device:
          integration: shelly

    target_light:
      name: Target Light
      description: The light to be controlled
      selector:
        entity:
          domain: light

    brightness_step:
      name: Brightness Step (%)
      default: 5
      selector:
        number:
          min: 1
          max: 20
          unit_of_measurement: "%"

    step_interval:
      name: Step Interval (ms)
      default: 200
      selector:
        number:
          min: 50
          max: 1000
          unit_of_measurement: "ms"

mode: restart

variables:
  light_target: !input target_light
  step_pct: !input brightness_step
  step_ms: !input step_interval
  shelly_device_id: !input shelly_device

trigger:
  - platform: event
    event_type: shelly.click

condition:
  - condition: template
    value_template: "{{ trigger.event.data.device_id == shelly_device_id }}"

action:
  - choose:
      # SINGLE CLICK → TOGGLE
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.click_type == 'single' }}"
        sequence:
          - service: light.toggle
            target:
              entity_id: "{{ light_target }}"

      # DOUBLE CLICK → FULL BRIGHTNESS
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.click_type == 'double' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_target }}"
            data:
              brightness_pct: 100

      # LONG PRESS → INCREASE BRIGHTNESS
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.click_type == 'long' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_target }}"
            data:
              brightness_step_pct: "{{ step_pct }}"

      # LONG RELEASE → DECREASE BRIGHTNESS
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.click_type == 'long_release' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_target }}"
            data:
              brightness_step_pct: "-{{ step_pct }}"
