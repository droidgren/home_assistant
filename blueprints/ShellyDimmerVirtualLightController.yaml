blueprint:
  name: Shelly Dimmer Virtual Light Controller (Continuous Hold, No Helper)
  description: >
    Use a Shelly Dimmer 2 as a virtual dimmer to control another smart light.
    - Single click toggles
    - Double click sets full brightness
    - Hold to brighten continuously
    - Release stops dimming

  domain: automation
  input:
    shelly_device:
      name: Shelly Device
      description: Select the Shelly Dimmer device
      selector:
        device:
          integration: shelly

    target_light:
      name: Target Light
      description: Light to control
      selector:
        entity:
          domain: light

    brightness_step:
      name: Brightness Step (%)
      default: 3
      selector:
        number:
          min: 1
          max: 20
          step: 1
          unit_of_measurement: "%"

    delay_ms:
      name: Delay between steps (ms)
      default: 150
      selector:
        number:
          min: 50
          max: 1000
          step: 25
          unit_of_measurement: "ms"

    min_brightness:
      name: Minimum Brightness (%)
      default: 5
      selector:
        number:
          min: 1
          max: 50
          step: 1
          unit_of_measurement: "%"

    max_brightness:
      name: Maximum Brightness (%)
      default: 100
      selector:
        number:
          min: 50
          max: 100
          step: 1
          unit_of_measurement: "%"

    transition_seconds:
      name: Transition Seconds
      default: 0.2
      selector:
        number:
          min: 0
          max: 2
          step: 0.1
          unit_of_measurement: "s"

mode: restart

variables:
  light_entity: !input target_light
  step: !input brightness_step
  delay: !input delay_ms
  min_brightness: !input min_brightness
  max_brightness: !input max_brightness
  transition: !input transition_seconds
  shelly_device_id: !input shelly_device

trigger:
  - platform: event
    event_type: shelly.click
    id: single
    event_data:
      click_type: single
  - platform: event
    event_type: shelly.click
    id: double
    event_data:
      click_type: double
  - platform: event
    event_type: shelly.click
    id: long
    event_data:
      click_type: long
  - platform: event
    event_type: shelly.click
    id: long_release
    event_data:
      click_type: long_release

condition:
  - condition: template
    value_template: "{{ trigger.event.data.device_id == shelly_device_id }}"

action:
  - choose:
      # --- SINGLE CLICK ---
      - conditions:
          - condition: trigger
            id: single
        sequence:
          - service: light.toggle
            target:
              entity_id: "{{ light_entity }}"

      # --- DOUBLE CLICK ---
      - conditions:
          - condition: trigger
            id: double
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_entity }}"
            data:
              brightness_pct: 100

      # --- HOLD (CONTINUOUS BRIGHTEN) ---
      - conditions:
          - condition: trigger
            id: long
        sequence:
          - repeat:
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ light_entity }}"
                  data:
                    brightness_pct: >-
                      {{
                        [
                          [
                            ((state_attr(light_entity, 'brightness') | int(0)) / 2.55) | int + step,
                            max_brightness
                          ] | min,
                          min_brightness
                        ] | max
                      }}
                    transition: "{{ transition }}"
                - delay:
                    milliseconds: "{{ delay }}"
              until:
                - condition: trigger
                  id: long_release
